{
	"info": {
		"_postman_id": "ab1b599c-83ae-4c92-9bb5-006e3d41c9ce",
		"name": "Veve",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8782020"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.environment.set(\"access_token\", pm.response.json().access_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"john\",\n    \"password\": \"changeme\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Profile",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/auth/profile",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"auth",
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "NFT GraphQL",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "{\n    count\n    listOwnedNft(pagination: {\n        skip: 4,\n        take: 2\n    }) {\n        id,\n        name,\n        owner\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:3000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"graphql"
					]
				}
			},
			"response": [
				{
					"name": "Get NFT",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    nft(id: \"01524bf5-7143-422a-b9cc-dec333a173d4\") {\n        id,\n        name,\n        blockchainLink,\n        description,\n        imageUrl,\n        owner,\n        mintDate\n    }\n}",
								"variables": ""
							}
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				},
				{
					"name": "List NFT",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    nfts {\n        id,\n        name,\n        blockchainLink,\n        description,\n        imageUrl,\n        mintDate\n    }\n}",
								"variables": ""
							}
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				},
				{
					"name": "Create NFT",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n   addNft(\n       name: \"new-nft\", \n       blockchainLink: \"test-link\", \n       description: \"test-description\",\n       imageUrl: \"test-image-url\")\n   {\n        id,\n        name,\n        blockchainLink,\n        description,\n        imageUrl,\n        mintDate\n   }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				},
				{
					"name": "Update NFT",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n   updateNft(\n       id: \"01524bf5-7143-422a-b9cc-dec333a173d4\", \n       updateNftInput: {\n       name: \"updated-nft-name\"\n    })\n   {\n        id,\n        name,\n        blockchainLink,\n        description,\n        imageUrl,\n        mintDate\n   }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				},
				{
					"name": "Delete NFT",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n   deleteNft(\n       id: \"01524bf5-7143-422a-b9cc-dec333a173d4\")\n   {\n        id,\n        name,\n        blockchainLink,\n        description,\n        imageUrl,\n        mintDate\n   }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				},
				{
					"name": "Change NFT Owner",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\n   changeNftOwner(id: \"01524bf5-7143-422a-b9cc-dec333a173d4\", updateNftOwnerInput: {\n       owner: \"rick\"\n   }) {\n       id\n   }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				},
				{
					"name": "List Owned NFT",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n    count\n    listOwnedNft(pagination: {\n        skip: 1,\n        take: 3\n    }) {\n        id,\n        name,\n        owner\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://localhost:3000/graphql",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"graphql"
							]
						}
					},
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}